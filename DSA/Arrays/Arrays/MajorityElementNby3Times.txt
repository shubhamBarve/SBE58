we need to find a element whch appears more than N/3 times

 N = 5, array[] = {1,2,2,3,2}

 here the element should  appear more than 2 times because 5/3 is 1 and it should appear ateleast 2 times

 the answer is 2

 Brute force approach
    iterate over the array and maintain the count
    if the count is greater than N/3 times.
    we found the solution

    approach ;
        for( i to n-1){
                for(j to n-1){
                    if(arr[j]==arr[i}
                   {
                   count++;
                   }
                }
                if(count > n/3+1)
                print arr[i]

        }



  Better Approach

    Using hashmap
    iterate over the array and store the count of that particular array

    again iterate over the hashmap and if key valus is greater than N/3  we have found the answer

Optimal Approach

Same as majority element which appears

elem1 = 0   count1 = 0;
elem2 = 0   count2 = 0;

if(count1 == 0){
        elem1 = arr[i]
}
else if if(count2 == 0){
                elem2 = arr[i]
        }

 else if( elem1 == arr[i]){
        count1 ++;

 }else if (elem2 == arr[i]){
    count2++;
 }
 else {
 count1 --;
 count2 --;
 }
